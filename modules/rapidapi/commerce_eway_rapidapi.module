<?php

/**
 * @file
 * Implements eWay Rapid API payment services for Drupal Commerce.
 */

/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_eway_rapidapi_commerce_payment_method_info() {
  $payment_methods = array();

  $payment_methods['eway_rapidapi'] = array(
    'base' => 'commerce_eway_rapidapi',
    'title' => t('eWAY Rapid API'),
    'short_title' => t('eWAY Rapid API payments'),
    'display_title' => t('Credit card'),
    'description' => t('Allows payments via the eWAY Rapid API.'),
  	'offsite' => FALSE,
  );

  return $payment_methods;
}

/**
 * Returns the default settings for the eWAY RapidAPI payment method.
 */
function commerce_eway_rapidapi_default_settings() {
  return array(
    'customer_id' => '',
    'username' => '',
    'password' => '',
    'log' => array('request' => 0, 'response' => 0),
  );
}

/**
 * Payment method callback: settings form.
 */
function commerce_eway_rapidapi_settings_form($settings = NULL) {
	$settings += commerce_eway_rapidapi_default_settings();

	$form = array();

  $form['customer_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Customer ID'),
    '#default_value' => $settings['customer_id'],
  );
  $form['username'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#default_value' => $settings['username'],
  );
  $form['password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#default_value' => $settings['password'],
  );
  $form['log'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Log the following messages for debugging'),
    '#options' => array(
      'request' => t('API request messages'),
      'response' => t('API response messages'),
    ),
    '#default_value' => $settings['log'],
  );
	return $form;
}

/**
 * Payment method callback: checkout form.
 */
function commerce_eway_rapidapi_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');

	// Ensure field for CVN is added.
  $fields = array(
    'code' => '',
  );

  return commerce_payment_credit_card_form($fields);
}

/**
 * Payment method callback: checkout form validation.
 */
function commerce_eway_rapidapi_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $form_parents = array()) {
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');

  // Validate the credit card fields.
  $settings = array(
    'form_parents' => array_merge($form_parents, array('credit_card')),
  );

  if (!commerce_payment_credit_card_validate($pane_values['credit_card'], $settings)) {
    return FALSE;
  }
}

/**
 * Payment method callback: checkout form submission.
 */
function commerce_eway_rapidapi_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {

	//dpm($pane_values);
	//dpm($order);

	// Create and populate the request object.
	$request = array();

	// Make CreateAccessCode request
	if ($response = hf_eway_soap_request($payment_method, $request)) {
		$response = $response->CreateAccessCodeResult;

    // POST the card data if we have an access code.
    if (isset($response->AccessCode) && !empty($response->AccessCode)) {

    }
	}
	else {
    drupal_set_message(t('We encountered an error contacting your payment processor. Please try submitting your payment again.'), 'error');
    return FALSE;
  }

}